{"code":"import { AppSyncClient, ListApiKeysCommand } from '@aws-sdk/client-appsync';\r\nconst GetApiKey = async (apiId) => {\r\n    const client = new AppSyncClient({});\r\n    const command = new ListApiKeysCommand({ apiId });\r\n    const response = await client.send(command);\r\n    if (!!response.apiKeys) {\r\n        for (let i = 0; i < response.apiKeys.length; i++) {\r\n            let expires = response.apiKeys[i].expires;\r\n            if (!!expires && expires > Date.now() / 1000) {\r\n                if (!!response.apiKeys[i].id) {\r\n                    return response.apiKeys[i].id;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nexport const AppSync = { GetApiKey };\r\n//# sourceMappingURL=index.js.map","references":["/workspaces/awsts/node_modules/@aws-sdk/client-appsync/dist-types/ts3.4/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/appsync/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,aAAa,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAE5E,MAAM,SAAS,GAAG,KAAK,EAAE,KAAa,EAAE,EAAE;IACxC,MAAM,MAAM,GAAG,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC;IACrC,MAAM,OAAO,GAAG,IAAI,kBAAkB,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IAClD,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5C,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAChD,IAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAC1C,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE;gBAC5C,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;oBAC5B,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;iBAC/B;aACF;SACF;KACF;IACD,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,OAAO,GAAG,EAAE,SAAS,EAAE,CAAC\"}","dts":{"name":"/workspaces/awsts/appsync/index.d.ts","writeByteOrderMark":false,"text":"export declare const AppSync: {\r\n    GetApiKey: (apiId: string) => Promise<string | undefined>;\r\n};\r\n"}}
